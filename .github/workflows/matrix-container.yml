# This workflow will run commands in a container on multiple jobs

name: matrix-container

on:
  workflow_dispatch:
    inputs:
      count:
        description: 'Number of jobs to run'
        required: true
        type: string
        default: 12
      gen_file_query:
        required: true
        type: string
        default: source=10.0.20348.0-roles
      
  push:
    branches: [ "main" ]


env:
  # how many runners   
  default-count: 12
  # how long the lists are (potentially skipping valid files)
  default-limit: 12


jobs:

  generate-matrix:    
    runs-on: ubuntu-latest    
    outputs:
      count: ${{ steps.getcount.outputs.countenv }}
    steps:      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Setup Count
        id: getcount          
        run: |                    
          echo Count set to: "${{inputs.count}}"
          [ -n "${{inputs.count}}" ] && echo "countenv=$(python -c 'print([count for count in range(0,${{inputs.count}})])')" >> "$GITHUB_OUTPUT"
          echo Count set to: "${{inputs.count}}"
          # default 12 jobs
          [ -z "${{inputs.count}}" ] && echo "countenv=$(python -c 'print([count for count in range(0,${{env.default-count}})])')" >> "$GITHUB_OUTPUT"
          echo Count set to: "${{inputs.count}}"
        shell: bash

  build_file_lists:
    needs: generate-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          pip install -r gen-requirements.txt 
          python -m cvedata.download --data-only
          # worfklow_dispatch
          [ -n "${{inputs.gen_file_query}}" ] && python gen_files.py --count ${{inputs.count}} ${{inputs.gen_file_query}}
          # default run
          [ -z "${{inputs.gen_file_query}}" ] && python gen_files.py --count ${{env.default-count}} --include source=10.0.20348.0-roles --limit-list ${{env.default-limit}}
          echo Hooray
      - uses: actions/upload-artifact@master
        with:
          name: gen_files
          path: gen_files
          retention-days: 1
          

  # download-files:
  #   needs: [build_file_lists, generate-matrix]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:        
  #       counts: ${{fromJson(needs.generate-matrix.outputs.count)}}

  #   steps:
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.10'
  #     - uses: actions/checkout@v3
  #     - uses: actions/download-artifact@master
  #       with:
  #         name: gen_files
  #         path: gen_files
  #     - name: Download files
  #       run: |
  #         pip install -r dl-requirements.txt
  #         # worfklow_dispatch
  #         [ -n "${{inputs.gen_file_query}}" ] && python get_files.py --id ${{ matrix.counts }}
  #         # default run
  #         [ -z "${{inputs.gen_file_query}}" ] && python get_files.py --id ${{ matrix.counts }}
  #         echo hooray
  #     - uses: actions/upload-artifact@master
  #       with:
  #         name: bins
  #         path: bins
  #         retention-days: 1



  workflow-runner:
    needs: [generate-matrix, build_file_lists,download-files]

    runs-on: ubuntu-latest
    # container:
    #   image: ghcr.io/clearbluejar/ghidrecomp:latest
    #   env:
    #     GHIDRA_INSTALL_DIR: "/ghidra"
    strategy:
      fail-fast: false
      matrix:        
        counts: ${{fromJson(needs.generate-matrix.outputs.count)}}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'        
      - uses: actions/download-artifact@master
        with:
          name: gen_files
          path: gen_files
      - name: Download files
        run: |
          pip install -r dl-requirements.txt
          # worfklow_dispatch
          [ -n "${{inputs.gen_file_query}}" ] && python get_files.py --id ${{ matrix.counts }}
          # default run
          [ -z "${{inputs.gen_file_query}}" ] && python get_files.py --id ${{ matrix.counts }}
          echo hooray
     
      - name: Echo Matrix
        run: |
          echo 
          ls gen_files
          ls bins
          jq -r 'to_entries[] | "\(.key)=\(.value)"' bins/meta/dl_files${{ matrix.counts }}.json          
    # - name: Run command in image
    #   run: |        
    #     whoami
    #     su vscode
    #     whoami
    #     python3 -m venv .env
    #     source .env/bin/activate
    #     pip install ghidrecomp
    #     cd /tmp
    #     ls /ghidra
    #     ghidrecomp -h
    #     ghidrecomp ${{ matrix.bins }}  
    #   shell: bash
      - name: Run make ci-build in dev container
        uses: devcontainers/ci@v0.3
        with:    
          # [Optional] If you have a separate workflow like the one above
          # to pre-build your container image, you can reference it here
          # to speed up your application build workflows as well!
          cacheFrom: ghcr.io/clearbluejar/ghidrecomp:latest
          push: never
          runCmd: |
            pip install ghidrecomp
            # test pyhidra
            python -c 'import pyhidra;pyhidra.start(True)'
            python run_decomp.py --id ${{ matrix.counts }}

      - name: Upload decompilations
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: decompilations
          path: decompilations
      - name: Upload bins
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: bins
          path: bins
          retention-days: 5
    






    # clean up decompilations

    # upload results